{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","Pages/LoginPage/LoginPage.js","Pages/HomePage/HomePage.js","Pages/AddPage/AddPage.js","Pages/AboutPage/AboutPage.js","Pages/EdditPage/EdditPage.js","Header/Header.js","Pages/ShowPost/PostPages.js","Pages/RegisterPage/RegisterPage.js","App.js","reportWebVitals.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","AuthContext","createContext","Container","styled","div","LoginContainer","ErrorMessage","LoginPage","setUser","useContext","history","useHistory","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","onSubmit","e","method","body","JSON","stringify","login","data","ok","message","response","toString","push","value","onChange","target","type","Root","PostContainer","PostTitle","Link","PostData","BottomPage","PageNumber","props","$active","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","location","useLocation","pathname","page","useParams","posts","setPosts","pagesNum","useRef","useEffect","postNum","length","current","Math","ceil","pages","limit","getPagesLength","console","log","map","Array","fill","item","index","TitleContainer","textarea","BodyContainer","TitleSize","NewPages","setTitle","setBody","AboutPages","edditPage","HeaderContainer","Brand","NavbarList","Nav","LeftContainer","Header","user","isLoding","setIsLoding","onClick","h1","PostTime","PostBody","p","DeletButton","button","EditeButton","deletePage","PostPages","setPost","getPost","RegisterPage","nickname","setNickname","register","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50c713aa.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\nconst BASE_URL = `https://student-json-api.lidemy.me`;\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}?_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPagesLength = (pages, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_expand=user&_sort=createdAt&_order=desc&_page=${pages}&_limit=${limit}`\n  ).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const post = (title, body) => {\n  const token = getAuthToken();\n  fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deletePage = (id) => {\n  const token = getAuthToken();\n  fetch(`${BASE_URL}/posts/${id}?_expand=user`, {\n    method: \"Delete\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const edditPage = (title, body) => {\n  const token = getAuthToken();\n  fetch(`${BASE_URL}/posts`, {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","import styled from \"styled-components\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nconst Container = styled.div`\n  width: 80%;\n  margin: 0px auto;\n`;\nconst LoginContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  text-align: center;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const handleSubmit = (e) => {\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      // 登入失敗\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <Container>\n      <LoginContainer>\n        <form onSubmit={handleSubmit}>\n          <div>\n            username:{\" \"}\n            <input\n              value={username}\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n          </div>\n          <div>\n            password:{\" \"}\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n          </div>\n          <button>登入</button>\n        </form>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </LoginContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link, useParams, useLocation } from \"react-router-dom\";\nimport { getPosts, getPagesLength } from \"../../WebAPI.js\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 10%;\n  border: 3px solid black;\n  margin-top: 40px;\n`;\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  text-decoration: none;\n  color: black;\n`;\nconst PostData = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst BottomPage = styled.div`\n  margin: 10px 0px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PageNumber = styled(Link)`\n  color: black;\n  border: 1px solid black;\n  border-radius: 20%;\n  padding: 10px;\n  text-decoration: none;\n  & + & {\n    margin-left: 5px;\n  }\n  ${(props) =>\n    props.$active &&\n    `\n  background: #F0FFFF;\n  color: black;\n  `}\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostData>{new Date(post.createdAt).toLocaleString()}</PostData>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\nexport default function HomePage() {\n  const location = useLocation().pathname;\n  const limit = 5;\n  let { page } = useParams();\n  if (!page) page = 1;\n  const [posts, setPosts] = useState([]);\n  let pagesNum = useRef();\n  // 這是什麼鬼東西？ Google 解答後得到『useRef 是一個可以讓我們抓取到 DOM 節點的 hooks。呼叫 useRef 建立出一個物件實體，null 表示初始值設定為 null。』\n  // 將建立的物件丟入我們要抓取的 DOM 元素的 ref attribute 中，做完這件事可以想成我們對這個 input 有了控制權。\n  // 重點在於改變 current 的值不會觸發 re-render\n  // 總結是，把東西變成物件了？然後修改值，不會 re-render? 不是很確定，但先暫時這樣。\n  useEffect(() => {\n    getPosts().then((posts) => {\n      const postNum = posts.length;\n      pagesNum.current = Math.ceil(postNum / limit);\n      getPagesLength(page, limit).then((posts) => {\n        console.log(posts);\n        setPosts(posts);\n      });\n    });\n  }, [page]);\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <BottomPage>\n        {new Array(pagesNum.current).fill(\"\").map((item, index) => {\n          return (\n            <PageNumber\n              key={index}\n              to={`/posts/${index + 1}`}\n              $active={\n                // 這裡的 active 應該是要判斷在哪一頁？\n                location === `/posts/${index + 1}` ||\n                (location === \"/\" && index === 0)\n              }\n            >\n              {index + 1}\n            </PageNumber>\n          );\n        })}\n      </BottomPage>\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { post, getMe } from \"../../WebAPI.js\";\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\nconst Container = styled.div`\n  width: 80%;\n  margin: 0px auto;\n`;\nconst LoginContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  text-align: center;\n`;\nconst TitleContainer = styled.textarea`\n  width: 600px;\n  border: 3px solid #cccccc;\n  padding: 5px;\n`;\nconst BodyContainer = styled.textarea`\n  width: 600px;\n  height: 120px;\n  border: 3px solid #cccccc;\n  padding: 5px;\n  font-family: Tahoma, sans-serif;\n  background-position: bottom right;\n  background-repeat: no-repeat;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst TitleSize = styled.div`\n  font-size: 30px;\n`;\n\nexport default function NewPages() {\n  const history = useHistory();\n  const { setUser } = useContext(AuthContext);\n  const handleSubmit = (e) => {\n    post(title, body);\n    history.push(\"/\");\n  };\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  return (\n    <Container>\n      <LoginContainer>\n        <form onSubmit={handleSubmit}>\n          <TitleSize>\n            <div>標題:</div>\n            <TitleContainer\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </TitleSize>\n          <TitleSize>\n            <div>內容: </div>\n            <BodyContainer\n              value={body}\n              onChange={(e) => {\n                setBody(e.target.value);\n              }}\n            />\n          </TitleSize>\n          <button>發文</button>\n        </form>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </LoginContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 10%;\n`;\nconst Container = styled.div`\n  border: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 50px;\n  text-align: center;\n  margin-top: 50px;\n  font-size: 40px;\n`;\n\nexport default function AboutPages() {\n  return (\n    <Root>\n      <Container>\n        這是一個練習 React\n        的部落格，註冊帳號時切勿使用真實密碼，裡面有許多功能並不完善，希望經過訓練能夠越來越熟悉\n        React 這套工具。\n      </Container>\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { edditPage } from \"../../WebAPI.js\";\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\nconst Container = styled.div`\n  width: 80%;\n  margin: 0px auto;\n`;\nconst LoginContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  text-align: center;\n`;\nconst TitleContainer = styled.textarea`\n  width: 600px;\n  border: 3px solid #cccccc;\n  padding: 5px;\n`;\nconst BodyContainer = styled.textarea`\n  width: 600px;\n  height: 120px;\n  border: 3px solid #cccccc;\n  padding: 5px;\n  font-family: Tahoma, sans-serif;\n  background-position: bottom right;\n  background-repeat: no-repeat;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nconst TitleSize = styled.div`\n  font-size: 30px;\n`;\n\nexport default function NewPages() {\n  const history = useHistory();\n  const { setUser } = useContext(AuthContext);\n  const handleSubmit = (e) => {\n    edditPage(title, body);\n    history.push(\"/\");\n  };\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  return (\n    <Container>\n      <LoginContainer>\n        <form onSubmit={handleSubmit}>\n          <TitleSize>\n            <div>標題:</div>\n            <TitleContainer\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </TitleSize>\n          <TitleSize>\n            <div>內容: </div>\n            <BodyContainer\n              value={body}\n              onChange={(e) => {\n                setBody(e.target.value);\n              }}\n            />\n          </TitleSize>\n          <button>發文</button>\n        </form>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </LoginContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../contexts\";\nimport { setAuthToken } from \"../utils\";\nimport {\n  HashRouter as Router,\n  useHistory,\n  Link,\n  useLocation,\n} from \"react-router-dom\";\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: flexed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing; border-box;\n  background: rgba(0,0,0,0.8);\n  color: white;\n`;\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing; border-box;\n  weight: 100px;\n  cursor: pointer;\n  margin-right: 15px;\n  height: 65px;\n  width: 105px;\n  color: white;\n  text-decoration: none;\n  ${(props) =>\n    props.$active &&\n    `\n  background: rgba(0, 0, 0, 0.1)\n  `}\n`;\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const { user, setUser } = useContext(AuthContext);\n  const { isLoding, setIsLoding } = useContext(AuthContext);\n  const history = useHistory();\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的 Blog</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"about\"}>\n            關於\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"new-post\"}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {!user && (\n          <Nav to=\"/register\" $active={location.pathname === \"register\"}>\n            註冊\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === \"login\"}>\n            登入\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport { getPost, deletePage } from \"../../WebAPI.js\";\nimport {\n  HashRouter as Router,\n  useParams,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nconst Container = styled.div`\n  width: 80%;\n  margin: 0px auto;\n`;\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n`;\nconst PostTitle = styled.h1``;\nconst PostTime = styled.div`\n  color: grey;\n  font-weight: bold;\n}`;\nconst PostBody = styled.p`\n  font-size: 20px;\n  white-space: pre-wrap;\n`;\nconst Root = styled.div``;\n\nconst DeletButton = styled.button`\n  width: 50px;\n  height: 30px;\n  font-size: 17px;\n`;\nconst EditeButton = styled.button`\n  margin-right: 10px;\n  width: 50px;\n  height: 30px;\n  font-size: 17px;\n`;\n\nfunction Post({ post, id }) {\n  const location = useLocation();\n  const history = useHistory();\n  const handleDelet = (e) => {\n    deletePage(id);\n    history.push(\"/\");\n  };\n  return (\n    <Container>\n      <PostContainer>\n        <EditeButton to=\"/eddit\" $active={location.pathname === \"eddit\"}>\n          編輯\n        </EditeButton>\n        <DeletButton onClick={handleDelet}>刪除</DeletButton>\n        <PostTitle>{post.title}</PostTitle>\n        <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n        <PostBody>{post.body}</PostBody>\n      </PostContainer>\n    </Container>\n  );\n}\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function PostPages() {\n  const [post, setPost] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    getPost(id).then((post) => setPost(post));\n  }, [id]);\n  return (\n    <Root>\n      <Post post={post} id={id} />\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nimport { register } from \"../../WebAPI\";\nconst Container = styled.div`\n  width: 80%;\n  margin: 0px auto;\n`;\nconst LoginContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  text-align: center;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n`;\nexport default function RegisterPage() {\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState();\n  const handleSubmit = (e) => {\n    register(nickname, username, password);\n    history.push(\"/\");\n  };\n  return (\n    <Container>\n      <LoginContainer>\n        <form onSubmit={handleSubmit}>\n          <div>\n            nickname:{\" \"}\n            <input\n              value={nickname}\n              onChange={(e) => {\n                setNickname(e.target.value);\n              }}\n            />\n          </div>\n          <div>\n            username:{\" \"}\n            <input\n              value={username}\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n          </div>\n          <div>\n            password:{\" \"}\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n          </div>\n          <button>輸入</button>\n        </form>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </LoginContainer>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport AddPage from \"./Pages/AddPage\";\nimport AboutPage from \"./Pages/AboutPage\";\nimport EdditPage from \"./Pages/EdditPage\";\nimport Header from \"./Header\";\nimport PostPages from \"./Pages/ShowPost\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport { AuthContext } from \"./contexts\";\nimport { getMe } from \"./WebAPI\";\nconst Root = styled.div``;\nfunction App() {\n  const [isLoding, setIsLoding] = useState(true);\n  console.log(isLoding);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // 有 token 才打 api\n    getMe().then((response) => {\n      if (response.ok) {\n        // 重新整理後，不會改變登入狀況\n        setUser(response.data);\n        setIsLoding(false);\n      }\n    });\n  }, []);\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/posts/:page\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route exact path=\"/new-post\">\n              <AddPage />\n            </Route>\n            <Route exact path=\"/eddit\">\n              <EdditPage />\n            </Route>\n            <Route exact path=\"/post/:id\">\n              <PostPages />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}